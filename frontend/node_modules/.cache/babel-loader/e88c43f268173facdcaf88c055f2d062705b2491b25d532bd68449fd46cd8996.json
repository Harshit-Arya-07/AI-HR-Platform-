{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\AI Resumer\\\\frontend\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authService } from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null,\n  loading: true,\n  error: null\n};\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_START':\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        user: action.payload,\n        loading: false,\n        error: null\n      };\n    case 'LOGIN_FAILURE':\n      return {\n        ...state,\n        user: null,\n        loading: false,\n        error: action.payload\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        loading: false,\n        error: null\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    default:\n      return state;\n  }\n};\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const user = await authService.getProfile();\n          dispatch({\n            type: 'LOGIN_SUCCESS',\n            payload: user\n          });\n        } catch (error) {\n          localStorage.removeItem('token');\n          dispatch({\n            type: 'SET_LOADING',\n            payload: false\n          });\n        }\n      } else {\n        dispatch({\n          type: 'SET_LOADING',\n          payload: false\n        });\n      }\n    };\n    initializeAuth();\n  }, []);\n  const login = async (email, password) => {\n    dispatch({\n      type: 'LOGIN_START'\n    });\n    try {\n      const response = await authService.login(email, password);\n      localStorage.setItem('token', response.token);\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: response.user\n      });\n    } catch (error) {\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        payload: error.message || 'Login failed'\n      });\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    dispatch({\n      type: 'LOGOUT'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      ...state,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authService","jsxDEV","_jsxDEV","initialState","user","loading","error","authReducer","state","action","type","payload","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","dispatch","initializeAuth","token","localStorage","getItem","getProfile","removeItem","login","email","password","response","setItem","message","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Projects/AI Resumer/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport { authService, User } from '../services/authService';\r\n\r\ninterface AuthState {\r\n  user: User | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\ntype AuthAction = \r\n  | { type: 'LOGIN_START' }\r\n  | { type: 'LOGIN_SUCCESS'; payload: User }\r\n  | { type: 'LOGIN_FAILURE'; payload: string }\r\n  | { type: 'LOGOUT' }\r\n  | { type: 'SET_LOADING'; payload: boolean };\r\n\r\nconst initialState: AuthState = {\r\n  user: null,\r\n  loading: true,\r\n  error: null,\r\n};\r\n\r\nconst authReducer = (state: AuthState, action: AuthAction): AuthState => {\r\n  switch (action.type) {\r\n    case 'LOGIN_START':\r\n      return { ...state, loading: true, error: null };\r\n    case 'LOGIN_SUCCESS':\r\n      return { ...state, user: action.payload, loading: false, error: null };\r\n    case 'LOGIN_FAILURE':\r\n      return { ...state, user: null, loading: false, error: action.payload };\r\n    case 'LOGOUT':\r\n      return { ...state, user: null, loading: false, error: null };\r\n    case 'SET_LOADING':\r\n      return { ...state, loading: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ninterface AuthContextType extends AuthState {\r\n  login: (email: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    const initializeAuth = async () => {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        try {\r\n          const user = await authService.getProfile();\r\n          dispatch({ type: 'LOGIN_SUCCESS', payload: user });\r\n        } catch (error) {\r\n          localStorage.removeItem('token');\r\n          dispatch({ type: 'SET_LOADING', payload: false });\r\n        }\r\n      } else {\r\n        dispatch({ type: 'SET_LOADING', payload: false });\r\n      }\r\n    };\r\n\r\n    initializeAuth();\r\n  }, []);\r\n\r\n  const login = async (email: string, password: string) => {\r\n    dispatch({ type: 'LOGIN_START' });\r\n    try {\r\n      const response = await authService.login(email, password);\r\n      localStorage.setItem('token', response.token);\r\n      dispatch({ type: 'LOGIN_SUCCESS', payload: response.user });\r\n    } catch (error: any) {\r\n      dispatch({ type: 'LOGIN_FAILURE', payload: error.message || 'Login failed' });\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    dispatch({ type: 'LOGOUT' });\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ ...state, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}