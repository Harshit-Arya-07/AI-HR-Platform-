{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\AI Resumer\\\\frontend\\\\src\\\\components\\\\Upload\\\\ResumeUpload.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Box, Paper, Typography, Button, TextField, Alert, CircularProgress, FormControl, InputLabel, Select, MenuItem } from '@mui/material';\nimport { CloudUpload as UploadIcon, Description as DocumentIcon } from '@mui/icons-material';\nimport { candidateService } from '../../services/candidateService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResumeUpload = ({\n  jobs,\n  onUploadSuccess,\n  onError\n}) => {\n  _s();\n  const [selectedJob, setSelectedJob] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const [dragOver, setDragOver] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [manualText, setManualText] = useState('');\n  const [useManualInput, setUseManualInput] = useState(false);\n  const [candidateInfo, setCandidateInfo] = useState({\n    name: '',\n    email: '',\n    phone: ''\n  });\n  const [showManualDialog, setShowManualDialog] = useState(false);\n  const fileInputRef = useRef(null);\n  const handleDragOver = e => {\n    e.preventDefault();\n    setDragOver(true);\n  };\n  const handleDragLeave = e => {\n    e.preventDefault();\n    setDragOver(false);\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    setDragOver(false);\n    const files = Array.from(e.dataTransfer.files);\n    if (files.length > 0) {\n      handleFileSelect(files[0]);\n    }\n  };\n  const handleFileSelect = file => {\n    const allowedTypes = ['application/pdf', 'text/plain', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'];\n    if (!allowedTypes.includes(file.type)) {\n      onError === null || onError === void 0 ? void 0 : onError('Please upload a PDF, Word document, or text file.');\n      return;\n    }\n    if (file.size > 10 * 1024 * 1024) {\n      // 10MB limit\n      onError === null || onError === void 0 ? void 0 : onError('File size must be less than 10MB.');\n      return;\n    }\n    setSelectedFile(file);\n    setUseManualInput(false);\n  };\n  const handleFileInputChange = e => {\n    const files = e.target.files;\n    if (files && files.length > 0) {\n      handleFileSelect(files[0]);\n    }\n  };\n  const handleUpload = async () => {\n    if (!selectedJob) {\n      onError === null || onError === void 0 ? void 0 : onError('Please select a job position.');\n      return;\n    }\n    if (!selectedFile && !manualText.trim()) {\n      onError === null || onError === void 0 ? void 0 : onError('Please upload a resume file or enter resume text.');\n      return;\n    }\n    setUploading(true);\n    try {\n      let result;\n      if (useManualInput && manualText.trim()) {\n        // Use manual text input\n        result = await candidateService.createCandidate({\n          resumeText: manualText.trim(),\n          jobId: selectedJob,\n          name: candidateInfo.name || undefined,\n          email: candidateInfo.email || undefined,\n          phone: candidateInfo.phone || undefined\n        });\n      } else if (selectedFile) {\n        // Use file upload\n        result = await candidateService.uploadResume(selectedFile, selectedJob, {\n          name: candidateInfo.name || undefined,\n          email: candidateInfo.email || undefined,\n          phone: candidateInfo.phone || undefined\n        });\n      } else {\n        throw new Error('No resume data provided');\n      }\n      onUploadSuccess === null || onUploadSuccess === void 0 ? void 0 : onUploadSuccess(result.candidate);\n\n      // Reset form\n      setSelectedFile(null);\n      setManualText('');\n      setSelectedJob('');\n      setCandidateInfo({\n        name: '',\n        email: '',\n        phone: ''\n      });\n      setUseManualInput(false);\n      setShowManualDialog(false);\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n    } catch (error) {\n      onError === null || onError === void 0 ? void 0 : onError(error.message);\n    } finally {\n      setUploading(false);\n    }\n  };\n  const selectedJobObj = jobs.find(job => job._id === selectedJob);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"Select Job Position\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: selectedJob,\n        onChange: e => setSelectedJob(e.target.value),\n        label: \"Select Job Position\",\n        children: jobs.map(job => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: job._id,\n          children: [job.title, \" - \", job.company]\n        }, job._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        gap: 2,\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: !useManualInput ? 'contained' : 'outlined',\n        onClick: () => setUseManualInput(false),\n        children: \"Upload File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: useManualInput ? 'contained' : 'outlined',\n        onClick: () => setUseManualInput(true),\n        children: \"Paste Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), !useManualInput && /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        border: 2,\n        borderColor: dragOver ? 'primary.main' : 'grey.300',\n        borderStyle: 'dashed',\n        borderRadius: 2,\n        p: 4,\n        textAlign: 'center',\n        bgcolor: dragOver ? 'action.hover' : 'background.paper',\n        cursor: 'pointer',\n        transition: 'all 0.2s ease-in-out',\n        mb: 3\n      },\n      onDragOver: handleDragOver,\n      onDragLeave: handleDragLeave,\n      onDrop: handleDrop,\n      onClick: () => {\n        var _fileInputRef$current;\n        return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: fileInputRef,\n        type: \"file\",\n        accept: \".pdf,.txt,.doc,.docx\",\n        onChange: handleFileInputChange,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), selectedFile ? /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(DocumentIcon, {\n          sx: {\n            fontSize: 48,\n            color: 'primary.main',\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: selectedFile.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: [(selectedFile.size / 1024 / 1024).toFixed(2), \" MB\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          size: \"small\",\n          sx: {\n            mt: 2\n          },\n          onClick: e => {\n            e.stopPropagation();\n            setSelectedFile(null);\n            if (fileInputRef.current) {\n              fileInputRef.current.value = '';\n            }\n          },\n          children: \"Remove File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(UploadIcon, {\n          sx: {\n            fontSize: 48,\n            color: 'text.secondary',\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Drag & Drop Resume Here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          sx: {\n            mb: 2\n          },\n          children: \"or click to browse files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          color: \"text.secondary\",\n          children: \"Supports PDF, Word, and Text files (max 10MB)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this), useManualInput && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        multiline: true,\n        rows: 10,\n        label: \"Paste Resume Text Here\",\n        placeholder: \"Copy and paste the resume content here...\",\n        value: manualText,\n        onChange: e => setManualText(e.target.value),\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3,\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Candidate Information (Optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        sx: {\n          mb: 2\n        },\n        children: \"This information will be extracted automatically if not provided.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 2,\n          flexWrap: 'wrap'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Full Name\",\n          value: candidateInfo.name,\n          onChange: e => setCandidateInfo({\n            ...candidateInfo,\n            name: e.target.value\n          }),\n          sx: {\n            flex: '1 1 200px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Email\",\n          type: \"email\",\n          value: candidateInfo.email,\n          onChange: e => setCandidateInfo({\n            ...candidateInfo,\n            email: e.target.value\n          }),\n          sx: {\n            flex: '1 1 200px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Phone\",\n          value: candidateInfo.phone,\n          onChange: e => setCandidateInfo({\n            ...candidateInfo,\n            phone: e.target.value\n          }),\n          sx: {\n            flex: '1 1 200px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), selectedJobObj && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Selected Position:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this), \" \", selectedJobObj.title, \" at \", selectedJobObj.company]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this), selectedJobObj.requirements.length > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          mt: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Key Requirements:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 15\n        }, this), \" \", selectedJobObj.requirements.slice(0, 5).join(', '), selectedJobObj.requirements.length > 5 && '...']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      size: \"large\",\n      fullWidth: true,\n      onClick: handleUpload,\n      disabled: uploading || !selectedJob || !selectedFile && !manualText.trim(),\n      startIcon: uploading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(UploadIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 65\n      }, this),\n      children: uploading ? 'Processing Resume...' : 'Upload & Analyze Resume'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"warning\",\n      sx: {\n        mt: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Note:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), \" PDF parsing is currently limited. For best results, copy and paste the resume text using the \\\"Paste Text\\\" option, or upload a .txt file.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(ResumeUpload, \"UvCQ5V8EfsgSqLQUAxngPjeIM9k=\");\n_c = ResumeUpload;\nexport default ResumeUpload;\nvar _c;\n$RefreshReg$(_c, \"ResumeUpload\");","map":{"version":3,"names":["React","useState","useRef","Box","Paper","Typography","Button","TextField","Alert","CircularProgress","FormControl","InputLabel","Select","MenuItem","CloudUpload","UploadIcon","Description","DocumentIcon","candidateService","jsxDEV","_jsxDEV","ResumeUpload","jobs","onUploadSuccess","onError","_s","selectedJob","setSelectedJob","uploading","setUploading","dragOver","setDragOver","selectedFile","setSelectedFile","manualText","setManualText","useManualInput","setUseManualInput","candidateInfo","setCandidateInfo","name","email","phone","showManualDialog","setShowManualDialog","fileInputRef","handleDragOver","e","preventDefault","handleDragLeave","handleDrop","files","Array","from","dataTransfer","length","handleFileSelect","file","allowedTypes","includes","type","size","handleFileInputChange","target","handleUpload","trim","result","createCandidate","resumeText","jobId","undefined","uploadResume","Error","candidate","current","value","error","message","selectedJobObj","find","job","_id","children","fullWidth","sx","mb","fileName","_jsxFileName","lineNumber","columnNumber","onChange","label","map","title","company","display","gap","variant","onClick","border","borderColor","borderStyle","borderRadius","p","textAlign","bgcolor","cursor","transition","onDragOver","onDragLeave","onDrop","_fileInputRef$current","click","ref","accept","style","fontSize","color","gutterBottom","toFixed","mt","stopPropagation","multiline","rows","placeholder","flexWrap","flex","severity","requirements","slice","join","disabled","startIcon","_c","$RefreshReg$"],"sources":["D:/Projects/AI Resumer/frontend/src/components/Upload/ResumeUpload.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Typography,\r\n  Button,\r\n  TextField,\r\n  Alert,\r\n  CircularProgress,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  IconButton,\r\n} from '@mui/material';\r\nimport {\r\n  CloudUpload as UploadIcon,\r\n  Close as CloseIcon,\r\n  Description as DocumentIcon,\r\n} from '@mui/icons-material';\r\nimport { candidateService } from '../../services/candidateService';\r\nimport { Job } from '../../services/jobService';\r\n\r\ninterface ResumeUploadProps {\r\n  jobs: Job[];\r\n  onUploadSuccess?: (candidate: any) => void;\r\n  onError?: (error: string) => void;\r\n}\r\n\r\nconst ResumeUpload: React.FC<ResumeUploadProps> = ({ jobs, onUploadSuccess, onError }) => {\r\n  const [selectedJob, setSelectedJob] = useState('');\r\n  const [uploading, setUploading] = useState(false);\r\n  const [dragOver, setDragOver] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\r\n  const [manualText, setManualText] = useState('');\r\n  const [useManualInput, setUseManualInput] = useState(false);\r\n  const [candidateInfo, setCandidateInfo] = useState({\r\n    name: '',\r\n    email: '',\r\n    phone: ''\r\n  });\r\n  const [showManualDialog, setShowManualDialog] = useState(false);\r\n\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const handleDragOver = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setDragOver(true);\r\n  };\r\n\r\n  const handleDragLeave = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setDragOver(false);\r\n  };\r\n\r\n  const handleDrop = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setDragOver(false);\r\n    \r\n    const files = Array.from(e.dataTransfer.files);\r\n    if (files.length > 0) {\r\n      handleFileSelect(files[0]);\r\n    }\r\n  };\r\n\r\n  const handleFileSelect = (file: File) => {\r\n    const allowedTypes = ['application/pdf', 'text/plain', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'];\r\n    \r\n    if (!allowedTypes.includes(file.type)) {\r\n      onError?.('Please upload a PDF, Word document, or text file.');\r\n      return;\r\n    }\r\n\r\n    if (file.size > 10 * 1024 * 1024) { // 10MB limit\r\n      onError?.('File size must be less than 10MB.');\r\n      return;\r\n    }\r\n\r\n    setSelectedFile(file);\r\n    setUseManualInput(false);\r\n  };\r\n\r\n  const handleFileInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const files = e.target.files;\r\n    if (files && files.length > 0) {\r\n      handleFileSelect(files[0]);\r\n    }\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedJob) {\r\n      onError?.('Please select a job position.');\r\n      return;\r\n    }\r\n\r\n    if (!selectedFile && !manualText.trim()) {\r\n      onError?.('Please upload a resume file or enter resume text.');\r\n      return;\r\n    }\r\n\r\n    setUploading(true);\r\n\r\n    try {\r\n      let result;\r\n\r\n      if (useManualInput && manualText.trim()) {\r\n        // Use manual text input\r\n        result = await candidateService.createCandidate({\r\n          resumeText: manualText.trim(),\r\n          jobId: selectedJob,\r\n          name: candidateInfo.name || undefined,\r\n          email: candidateInfo.email || undefined,\r\n          phone: candidateInfo.phone || undefined,\r\n        });\r\n      } else if (selectedFile) {\r\n        // Use file upload\r\n        result = await candidateService.uploadResume(\r\n          selectedFile,\r\n          selectedJob,\r\n          {\r\n            name: candidateInfo.name || undefined,\r\n            email: candidateInfo.email || undefined,\r\n            phone: candidateInfo.phone || undefined,\r\n          }\r\n        );\r\n      } else {\r\n        throw new Error('No resume data provided');\r\n      }\r\n\r\n      onUploadSuccess?.(result.candidate);\r\n      \r\n      // Reset form\r\n      setSelectedFile(null);\r\n      setManualText('');\r\n      setSelectedJob('');\r\n      setCandidateInfo({ name: '', email: '', phone: '' });\r\n      setUseManualInput(false);\r\n      setShowManualDialog(false);\r\n      \r\n      if (fileInputRef.current) {\r\n        fileInputRef.current.value = '';\r\n      }\r\n    } catch (error: any) {\r\n      onError?.(error.message);\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const selectedJobObj = jobs.find(job => job._id === selectedJob);\r\n\r\n  return (\r\n    <Box>\r\n      {/* Job Selection */}\r\n      <FormControl fullWidth sx={{ mb: 3 }}>\r\n        <InputLabel>Select Job Position</InputLabel>\r\n        <Select\r\n          value={selectedJob}\r\n          onChange={(e) => setSelectedJob(e.target.value)}\r\n          label=\"Select Job Position\"\r\n        >\r\n          {jobs.map((job) => (\r\n            <MenuItem key={job._id} value={job._id}>\r\n              {job.title} - {job.company}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n\r\n      {/* Upload Methods */}\r\n      <Box sx={{ display: 'flex', gap: 2, mb: 3 }}>\r\n        <Button\r\n          variant={!useManualInput ? 'contained' : 'outlined'}\r\n          onClick={() => setUseManualInput(false)}\r\n        >\r\n          Upload File\r\n        </Button>\r\n        <Button\r\n          variant={useManualInput ? 'contained' : 'outlined'}\r\n          onClick={() => setUseManualInput(true)}\r\n        >\r\n          Paste Text\r\n        </Button>\r\n      </Box>\r\n\r\n      {/* File Upload Area */}\r\n      {!useManualInput && (\r\n        <Paper\r\n          sx={{\r\n            border: 2,\r\n            borderColor: dragOver ? 'primary.main' : 'grey.300',\r\n            borderStyle: 'dashed',\r\n            borderRadius: 2,\r\n            p: 4,\r\n            textAlign: 'center',\r\n            bgcolor: dragOver ? 'action.hover' : 'background.paper',\r\n            cursor: 'pointer',\r\n            transition: 'all 0.2s ease-in-out',\r\n            mb: 3\r\n          }}\r\n          onDragOver={handleDragOver}\r\n          onDragLeave={handleDragLeave}\r\n          onDrop={handleDrop}\r\n          onClick={() => fileInputRef.current?.click()}\r\n        >\r\n          <input\r\n            ref={fileInputRef}\r\n            type=\"file\"\r\n            accept=\".pdf,.txt,.doc,.docx\"\r\n            onChange={handleFileInputChange}\r\n            style={{ display: 'none' }}\r\n          />\r\n          \r\n          {selectedFile ? (\r\n            <Box>\r\n              <DocumentIcon sx={{ fontSize: 48, color: 'primary.main', mb: 2 }} />\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                {selectedFile.name}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                {(selectedFile.size / 1024 / 1024).toFixed(2)} MB\r\n              </Typography>\r\n              <Button\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                sx={{ mt: 2 }}\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  setSelectedFile(null);\r\n                  if (fileInputRef.current) {\r\n                    fileInputRef.current.value = '';\r\n                  }\r\n                }}\r\n              >\r\n                Remove File\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <Box>\r\n              <UploadIcon sx={{ fontSize: 48, color: 'text.secondary', mb: 2 }} />\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Drag & Drop Resume Here\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\r\n                or click to browse files\r\n              </Typography>\r\n              <Typography variant=\"caption\" color=\"text.secondary\">\r\n                Supports PDF, Word, and Text files (max 10MB)\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n        </Paper>\r\n      )}\r\n\r\n      {/* Manual Text Input */}\r\n      {useManualInput && (\r\n        <Box sx={{ mb: 3 }}>\r\n          <TextField\r\n            fullWidth\r\n            multiline\r\n            rows={10}\r\n            label=\"Paste Resume Text Here\"\r\n            placeholder=\"Copy and paste the resume content here...\"\r\n            value={manualText}\r\n            onChange={(e) => setManualText(e.target.value)}\r\n            variant=\"outlined\"\r\n          />\r\n        </Box>\r\n      )}\r\n\r\n      {/* Candidate Information (Optional) */}\r\n      <Paper sx={{ p: 3, mb: 3 }}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Candidate Information (Optional)\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\r\n          This information will be extracted automatically if not provided.\r\n        </Typography>\r\n        \r\n        <Box sx={{ display: 'flex', gap: 2, flexWrap: 'wrap' }}>\r\n          <TextField\r\n            label=\"Full Name\"\r\n            value={candidateInfo.name}\r\n            onChange={(e) => setCandidateInfo({ ...candidateInfo, name: e.target.value })}\r\n            sx={{ flex: '1 1 200px' }}\r\n          />\r\n          <TextField\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            value={candidateInfo.email}\r\n            onChange={(e) => setCandidateInfo({ ...candidateInfo, email: e.target.value })}\r\n            sx={{ flex: '1 1 200px' }}\r\n          />\r\n          <TextField\r\n            label=\"Phone\"\r\n            value={candidateInfo.phone}\r\n            onChange={(e) => setCandidateInfo({ ...candidateInfo, phone: e.target.value })}\r\n            sx={{ flex: '1 1 200px' }}\r\n          />\r\n        </Box>\r\n      </Paper>\r\n\r\n      {/* Selected Job Info */}\r\n      {selectedJobObj && (\r\n        <Alert severity=\"info\" sx={{ mb: 3 }}>\r\n          <Typography variant=\"body2\">\r\n            <strong>Selected Position:</strong> {selectedJobObj.title} at {selectedJobObj.company}\r\n          </Typography>\r\n          {selectedJobObj.requirements.length > 0 && (\r\n            <Typography variant=\"body2\" sx={{ mt: 1 }}>\r\n              <strong>Key Requirements:</strong> {selectedJobObj.requirements.slice(0, 5).join(', ')}\r\n              {selectedJobObj.requirements.length > 5 && '...'}\r\n            </Typography>\r\n          )}\r\n        </Alert>\r\n      )}\r\n\r\n      {/* Upload Button */}\r\n      <Button\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        fullWidth\r\n        onClick={handleUpload}\r\n        disabled={uploading || !selectedJob || (!selectedFile && !manualText.trim())}\r\n        startIcon={uploading ? <CircularProgress size={20} /> : <UploadIcon />}\r\n      >\r\n        {uploading ? 'Processing Resume...' : 'Upload & Analyze Resume'}\r\n      </Button>\r\n\r\n      {/* PDF Warning */}\r\n      <Alert severity=\"warning\" sx={{ mt: 2 }}>\r\n        <Typography variant=\"body2\">\r\n          <strong>Note:</strong> PDF parsing is currently limited. For best results, copy and paste the resume text \r\n          using the \"Paste Text\" option, or upload a .txt file.\r\n        </Typography>\r\n      </Alert>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ResumeUpload;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}